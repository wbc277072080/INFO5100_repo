/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import Business.CarInfoList;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author wangbaichao
 */
public class CreateCarPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateCarPanel
     */
    private CarInfoList carInfoList;
    private JPanel rightPanel;
    
    public CreateCarPanel(JPanel rightPanel,CarInfoList carInfoList) {
        initComponents();
        this.carInfoList = carInfoList;
        this.rightPanel=rightPanel;
    }
    
    private void recordUpdateTime() {
        //Create an instance of SimpleDateFormat used for formatting
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
        // Get the date today using Calendar object.
        Date today = Calendar.getInstance().getTime();
        // Using DateFormat format method we can create a string 
        // representation of a date with the defined format.
        String todayDate = df.format(today);
        carInfoList.setUpdateDate(todayDate);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMinSeats = new javax.swing.JTextField();
        txtBrand = new javax.swing.JTextField();
        txtManufacturedYear = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblHead = new javax.swing.JLabel();
        lblAvailable = new javax.swing.JLabel();
        lblBrand = new javax.swing.JLabel();
        lblManufacturedYear = new javax.swing.JLabel();
        lblMinSeats = new javax.swing.JLabel();
        lblMaxSeats = new javax.swing.JLabel();
        lblSerialNum = new javax.swing.JLabel();
        lblModelNum = new javax.swing.JLabel();
        lblAvailCity = new javax.swing.JLabel();
        lblMaintenanceCertificate = new javax.swing.JLabel();
        txtMaxSeats = new javax.swing.JTextField();
        txtSerialNum = new javax.swing.JTextField();
        txtModelNum = new javax.swing.JTextField();
        txtAvailableCity = new javax.swing.JTextField();
        availableCheckBox = new javax.swing.JCheckBox();
        maintenanceCertificateCheckBox = new javax.swing.JCheckBox();

        txtManufacturedYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManufacturedYearActionPerformed(evt);
            }
        });

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblHead.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblHead.setText("Create Car");

        lblAvailable.setText("Available");

        lblBrand.setText("Brand");

        lblManufacturedYear.setText("Manufactured Year");

        lblMinSeats.setText("Min Seats");

        lblMaxSeats.setText("Max Seats");

        lblSerialNum.setText("Serial Number");

        lblModelNum.setText("Model Number");

        lblAvailCity.setText("Available City");

        lblMaintenanceCertificate.setText("Maintenance Certificate");

        availableCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableCheckBoxActionPerformed(evt);
            }
        });

        maintenanceCertificateCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maintenanceCertificateCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(99, 99, 99)
                        .addComponent(lblHead))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblBrand)
                            .addComponent(lblAvailable)
                            .addComponent(lblManufacturedYear)
                            .addComponent(lblMinSeats)
                            .addComponent(lblMaxSeats)
                            .addComponent(lblSerialNum)
                            .addComponent(lblModelNum)
                            .addComponent(lblAvailCity)
                            .addComponent(lblMaintenanceCertificate))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAvailableCity)
                            .addComponent(txtModelNum)
                            .addComponent(txtBrand)
                            .addComponent(txtManufacturedYear)
                            .addComponent(txtMinSeats)
                            .addComponent(txtMaxSeats, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(availableCheckBox)
                            .addComponent(maintenanceCertificateCheckBox)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(442, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblHead)
                        .addGap(24, 24, 24)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAvailable)
                    .addComponent(availableCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtManufacturedYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManufacturedYear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMinSeats)
                    .addComponent(txtMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaxSeats))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSerialNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblModelNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAvailableCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAvailCity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaintenanceCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maintenanceCertificateCheckBox))
                .addGap(18, 18, 18)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        //check input
        
        boolean available = availableCheckBox.isSelected();
                //Boolean.parseBoolean(availableCheckBox.setSelected);
        
        //check brand
        String brand = txtBrand.getText();
        if(brand==null||brand.equals("")){
            JOptionPane.showMessageDialog(null, "Brand can't be empty");
            return;
        }

        //check manufactured year is number
        String manufacturedYear = txtManufacturedYear.getText();
        try{
            Integer.parseInt(manufacturedYear);

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please enter number for manufactured year");
            return;
        }

        //check min seats is number
        String minSeats = txtMinSeats.getText();
        try{
            Integer.parseInt(minSeats);

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please enter number for min seats");
            return;
        }
        
        //check max seats is number
        String maxSeats = txtMaxSeats.getText();
        try{
            Integer.parseInt(maxSeats);

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please enter number for max seats");
            return;
        }
        

        //check serial number is number
        String serialNum = txtSerialNum.getText();
        try{
            Integer.parseInt(serialNum);

        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Please enter number for serial number");
            return;
        }
        
        //check model number
        String modelNum = txtModelNum.getText();
        if(modelNum==null||modelNum.equals("")){
            JOptionPane.showMessageDialog(null, "model number can't be empty");
            return;
        }
        
        //check available city
        String availableCity = txtAvailableCity.getText();
        if(availableCity==null||availableCity.equals("")){
            JOptionPane.showMessageDialog(null, "available city can't be empty");
            return;
        }
        
        boolean maintenanceCertificate = maintenanceCertificateCheckBox.isSelected();
        //boolean maintenanceCertificate = Boolean.parseBoolean((String)maintenanceCertificateCBox.getSelectedItem());
        

        //creating Car
        Car car = carInfoList.addCar();
        
        car.setAvailable(available);
        car.setBrand(brand);
        car.setManufactured_year(Integer.parseInt(manufacturedYear));
        car.setMin_seats(Integer.parseInt(minSeats));
        car.setMax_seats(Integer.parseInt(maxSeats));
        car.setSerial_num(Integer.parseInt(serialNum));
        car.setModel_num(modelNum);
        car.setAvailble_city(availableCity);
        car.setMaintenance_certificate(maintenanceCertificate);
        recordUpdateTime();
        

        JOptionPane.showMessageDialog(null, "Car Created Successfully");

        //reset Textfield
        availableCheckBox.setSelected(false);
        txtBrand.setText("");
        txtManufacturedYear.setText("");
        txtMinSeats.setText("");
        txtMaxSeats.setText("");
        txtSerialNum.setText("");
        txtModelNum.setText("");
        txtAvailableCity.setText("");
        maintenanceCertificateCheckBox.setSelected(false);

    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.rightPanel.remove(this);
        CardLayout layout = (CardLayout) this.rightPanel.getLayout();
        layout.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtManufacturedYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManufacturedYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManufacturedYearActionPerformed

    private void maintenanceCertificateCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maintenanceCertificateCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maintenanceCertificateCheckBoxActionPerformed

    private void availableCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availableCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox availableCheckBox;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreate;
    private javax.swing.JLabel lblAvailCity;
    private javax.swing.JLabel lblAvailable;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblHead;
    private javax.swing.JLabel lblMaintenanceCertificate;
    private javax.swing.JLabel lblManufacturedYear;
    private javax.swing.JLabel lblMaxSeats;
    private javax.swing.JLabel lblMinSeats;
    private javax.swing.JLabel lblModelNum;
    private javax.swing.JLabel lblSerialNum;
    private javax.swing.JCheckBox maintenanceCertificateCheckBox;
    private javax.swing.JTextField txtAvailableCity;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtManufacturedYear;
    private javax.swing.JTextField txtMaxSeats;
    private javax.swing.JTextField txtMinSeats;
    private javax.swing.JTextField txtModelNum;
    private javax.swing.JTextField txtSerialNum;
    // End of variables declaration//GEN-END:variables
}
