/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import javax.swing.JOptionPane;
import Business.CarInfoList;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JPanel;
/**
 *
 * @author info
 */
public class ViewPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPanel
     */
    private CarInfoList carInfoList;
    private Car car;
    private JPanel rightPanel;
    
    ViewPanel(JPanel rightPanel,Car car, CarInfoList carInfoList) {
        initComponents();
        this.rightPanel=rightPanel;
        this.car=car;
        this.carInfoList = carInfoList;
        
        //reset Textfield
        availableCheckBox.setSelected(car.isAvailable());
        txtBrand.setText(car.getBrand());
        txtManufacturedYear.setText(String.valueOf(car.getManufactured_year()));
        txtMinSeats.setText(String.valueOf(car.getMin_seats()));
        txtMaxSeats.setText(String.valueOf(car.getMax_seats()));
        txtSerialNum.setText(String.valueOf(car.getSerial_num()));
        txtModelNum.setText(car.getModel_num());
        txtAvailableCity.setText(car.getAvailble_city());
        maintenanceCertificateCheckBox.setSelected(car.isMaintenance_certificate());
        
        btnSave.setEnabled(false);
        btnCancel.setEnabled(false);
        btnUpdate.setEnabled(true);
        
                
    }
    
    private void recordUpdateTime() {
        //Create an instance of SimpleDateFormat used for formatting
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
        // Get the date today using Calendar object.
        Date today = Calendar.getInstance().getTime();
        // Using DateFormat format method we can create a string 
        // representation of a date with the defined format.
        String todayDate = df.format(today);
        carInfoList.setUpdateDate(todayDate);
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHead = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtAvailableCity = new javax.swing.JTextField();
        lblMinSeats = new javax.swing.JLabel();
        lblMaxSeats = new javax.swing.JLabel();
        txtMinSeats = new javax.swing.JTextField();
        lblSerialNum = new javax.swing.JLabel();
        txtBrand = new javax.swing.JTextField();
        lblModelNum = new javax.swing.JLabel();
        txtManufacturedYear = new javax.swing.JTextField();
        lblAvailCity = new javax.swing.JLabel();
        lblMaintenanceCertificate = new javax.swing.JLabel();
        txtMaxSeats = new javax.swing.JTextField();
        lblAvailable = new javax.swing.JLabel();
        txtSerialNum = new javax.swing.JTextField();
        lblBrand = new javax.swing.JLabel();
        txtModelNum = new javax.swing.JTextField();
        lblManufacturedYear = new javax.swing.JLabel();
        availableCheckBox = new javax.swing.JCheckBox();
        maintenanceCertificateCheckBox = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(204, 204, 204));

        lblHead.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblHead.setText("View Product");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.setEnabled(false);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtAvailableCity.setEnabled(false);

        lblMinSeats.setText("Min Seats");

        lblMaxSeats.setText("Max Seats");

        txtMinSeats.setEnabled(false);

        lblSerialNum.setText("Serial Number");

        txtBrand.setEnabled(false);

        lblModelNum.setText("Model Number");

        txtManufacturedYear.setEnabled(false);
        txtManufacturedYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManufacturedYearActionPerformed(evt);
            }
        });

        lblAvailCity.setText("Available City");

        lblMaintenanceCertificate.setText("Maintenance Certificate");

        txtMaxSeats.setEnabled(false);

        lblAvailable.setText("Available");

        txtSerialNum.setEnabled(false);

        lblBrand.setText("Brand");

        txtModelNum.setEnabled(false);

        lblManufacturedYear.setText("Manufactured Year");

        availableCheckBox.setEnabled(false);

        maintenanceCertificateCheckBox.setEnabled(false);
        maintenanceCertificateCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maintenanceCertificateCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblHead))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblBrand)
                                    .addComponent(lblAvailable)
                                    .addComponent(lblManufacturedYear)
                                    .addComponent(lblMinSeats)
                                    .addComponent(lblMaxSeats)
                                    .addComponent(lblSerialNum)
                                    .addComponent(lblModelNum)
                                    .addComponent(lblAvailCity)
                                    .addComponent(lblMaintenanceCertificate))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtAvailableCity)
                                        .addComponent(txtModelNum)
                                        .addComponent(txtBrand)
                                        .addComponent(txtManufacturedYear)
                                        .addComponent(txtMinSeats)
                                        .addComponent(txtMaxSeats, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(maintenanceCertificateCheckBox)
                                    .addComponent(availableCheckBox))))))
                .addGap(0, 424, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(lblHead)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(availableCheckBox)
                    .addComponent(lblAvailable))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtManufacturedYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManufacturedYear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMinSeats)
                    .addComponent(txtMinSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaxSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaxSeats))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSerialNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblModelNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAvailableCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAvailCity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMaintenanceCertificate, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancel)
                            .addComponent(btnUpdate)
                            .addComponent(btnSave)))
                    .addComponent(maintenanceCertificateCheckBox))
                .addContainerGap(108, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
            availableCheckBox.setEnabled(true);
            txtBrand.setEnabled(true);
            txtManufacturedYear.setEnabled(true);
            txtMinSeats.setEnabled(true);
            txtMaxSeats.setEnabled(true);
            txtSerialNum.setEnabled(true);
            txtModelNum.setEnabled(true);
            txtAvailableCity.setEnabled(true);
            maintenanceCertificateCheckBox.setEnabled(true);
            

            btnSave.setEnabled(true);
            btnCancel.setEnabled(true);
            btnUpdate.setEnabled(false);
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
            availableCheckBox.setEnabled(false);
            txtBrand.setEnabled(false);
            txtManufacturedYear.setEnabled(false);
            txtMinSeats.setEnabled(false);
            txtMaxSeats.setEnabled(false);
            txtSerialNum.setEnabled(false);
            txtModelNum.setEnabled(false);
            txtAvailableCity.setEnabled(false);
            maintenanceCertificateCheckBox.setEnabled(false);
            
            btnSave.setEnabled(false);
            btnUpdate.setEnabled(true);
            btnCancel.setEnabled(false);
            
            boolean available = availableCheckBox.isSelected();
            //boolean available = Boolean.parseBoolean((String)availableCBox.getSelectedItem());
        
            //check brand
            String brand = txtBrand.getText();
            if(brand==null||brand.equals("")){
                JOptionPane.showMessageDialog(null, "Brand can't be empty");
                return;
            }

            //check manufactured year is number
            String manufacturedYear = txtManufacturedYear.getText();
            try{
                Integer.parseInt(manufacturedYear);

            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter number for manufactured year");
                return;
            }

            //check min seats is number
            String minSeats = txtMinSeats.getText();
            try{
                Integer.parseInt(minSeats);

            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter number for min seats");
                return;
            }
        
            //check max seats is number
            String maxSeats = txtMaxSeats.getText();
            try{
                Integer.parseInt(maxSeats);

            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter number for max seats");
                return;
            }
        

            //check serial number is number
            String serialNum = txtSerialNum.getText();
            try{
                Integer.parseInt(serialNum);

            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter number for serial number");
                return;
            }
        
            //check model number
            String modelNum = txtModelNum.getText();
            if(modelNum==null||modelNum.equals("")){
                JOptionPane.showMessageDialog(null, "model number can't be empty");
                return;
            }
        
            //check available city
            String availableCity = txtAvailableCity.getText();
            if(availableCity==null||availableCity.equals("")){
                JOptionPane.showMessageDialog(null, "available city can't be empty");
                return;
            }
            boolean maintenanceCertificate = maintenanceCertificateCheckBox.isSelected();
            //boolean maintenanceCertificate = Boolean.parseBoolean((String)maintenanceCertificateCBox.getSelectedItem());
            
            
        
            car.setAvailable(available);
            car.setBrand(brand);
            car.setManufactured_year(Integer.parseInt(manufacturedYear));
            car.setMin_seats(Integer.parseInt(minSeats));
            car.setMax_seats(Integer.parseInt(maxSeats));
            car.setSerial_num(Integer.parseInt(serialNum));
            car.setModel_num(modelNum);
            car.setAvailble_city(availableCity);
            car.setMaintenance_certificate(maintenanceCertificate);
            recordUpdateTime();
        
        
            JOptionPane.showMessageDialog(null, "Car updated successfully"); 
            
            
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        //reset Textfield
        availableCheckBox.setSelected(car.isAvailable());
        txtBrand.setText(car.getBrand());
        txtManufacturedYear.setText(String.valueOf(car.getManufactured_year()));
        txtMinSeats.setText(String.valueOf(car.getMin_seats()));
        txtMaxSeats.setText(String.valueOf(car.getMax_seats()));
        txtSerialNum.setText(String.valueOf(car.getSerial_num()));
        txtModelNum.setText(car.getModel_num());
        txtAvailableCity.setText(car.getAvailble_city());
        maintenanceCertificateCheckBox.setSelected(car.isMaintenance_certificate());

            availableCheckBox.setEnabled(true);
            txtBrand.setEnabled(true);
            txtManufacturedYear.setEnabled(true);
            txtMinSeats.setEnabled(true);
            txtMaxSeats.setEnabled(true);
            txtSerialNum.setEnabled(true);
            txtModelNum.setEnabled(true);
            txtAvailableCity.setEnabled(true);
            maintenanceCertificateCheckBox.setEnabled(true);
            

            btnSave.setEnabled(false);
            btnCancel.setEnabled(false);
            btnUpdate.setEnabled(true);

        btnCancel.setEnabled(false);
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.rightPanel.remove(this);
        CardLayout layout = (CardLayout) this.rightPanel.getLayout();
        Component[] comps = this.rightPanel.getComponents();
        for(Component comp:comps){
            if(comp instanceof ManageCarPanel){
                ManageCarPanel manageP=(ManageCarPanel) comp;
                manageP.populate();
            }
        }
        layout.previous(rightPanel);
        
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtManufacturedYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManufacturedYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManufacturedYearActionPerformed

    private void maintenanceCertificateCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maintenanceCertificateCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maintenanceCertificateCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox availableCheckBox;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel lblAvailCity;
    private javax.swing.JLabel lblAvailable;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblHead;
    private javax.swing.JLabel lblMaintenanceCertificate;
    private javax.swing.JLabel lblManufacturedYear;
    private javax.swing.JLabel lblMaxSeats;
    private javax.swing.JLabel lblMinSeats;
    private javax.swing.JLabel lblModelNum;
    private javax.swing.JLabel lblSerialNum;
    private javax.swing.JCheckBox maintenanceCertificateCheckBox;
    private javax.swing.JTextField txtAvailableCity;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtManufacturedYear;
    private javax.swing.JTextField txtMaxSeats;
    private javax.swing.JTextField txtMinSeats;
    private javax.swing.JTextField txtModelNum;
    private javax.swing.JTextField txtSerialNum;
    // End of variables declaration//GEN-END:variables
}
